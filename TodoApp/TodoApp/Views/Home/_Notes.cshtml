@using TodoApp.Data
@using TodoApp.Enums
@model IEnumerable<Note>

@{
    StateTask getState(int state) => state switch {
        0 => StateTask.Activa,
        1 => StateTask.Terminada,
        2 => StateTask.Cancelada,
        3 => StateTask.Eliminada,
        _ => StateTask.Activa
    };

    Func<StateTask, DateTime, string> functionDate = (StateTask state, DateTime date) => {
        string day = date.ToString("dd");
        string month = date.ToString("MM");
        string year = date.ToString("yyyy");
        string hour = date.ToString("hh:mm tt");
        
        return $"{day}/{month}/{year} a las {hour} - {state}";
    };

    var getDetails = functionDate;
}

<link rel="stylesheet" href="~/css/home/notes.css" asp-append-version="true"/>

@foreach (var note in Model) {
    <article class="note">
        <div class="note-description">
            <p class="note-details">@getDetails(getState(note.State), note.Date)</p>
            <p class="note-text">@note.Text</p>
        </div>

        <div class="note-actions">
            <a class="action-btn action-btn-complete @note.Id">
                @if (note.State == 1) {
                    <i class="bi bi-check2-square"></i>
                } else {
                    <i class="bi bi-square"></i>
                }
            </a>

            <a class="action-btn action-btn-edit" 
            asp-action="Edit" asp-controller="" 
            asp-route-noteId="@note.Id">
                <i class="bi bi-pencil"></i>
            </a>

            <a class="action-btn action-btn-delete" 
            asp-action="Delete" asp-controller="" 
            asp-route-noteId="@note.Id">
                <i class="bi bi-trash"></i>
            </a>
        </div>
    </article>
}

<script>
    let completeButtons = document.querySelectorAll('.action-btn-complete');

    const API = 'https://localhost:7193/notes/complete';

    const completeNote = async noteId => {
        const request = `${API}/${noteId}`;
        const options = {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
        };

        try {
            const response = await fetch(request, options);
            return (response.status === 200);
        } catch(error) {
            return false;
        }
    }

    completeButtons.forEach(btn => {
        btn.addEventListener('click', async () => {
            let noteId = (Number)(btn.classList[2]);
            console.log(btn);
            console.log(noteId);
            let result = await completeNote(noteId);

            if (result) {
                location.reload();
            } else {
                console.error('ocurred an error while you marked as completed one task');
            }
        });
    });
</script>